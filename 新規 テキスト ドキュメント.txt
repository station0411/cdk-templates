for /f %i in ('aws backup list-backup-selections --backup-plan-id 3e9b0213-f773-4f5a-90b5-2d3c4b8b3b3a --region ap-northeast-1 --query "BackupSelectionsList[*].SelectionId | join(`\n`, @)" --output text') do @echo Processing Selection ID: %i & aws backup get-backup-selection --backup-plan-id 3e9b0213-f773-4f5a-90b5-2d3c4b8b3b3a --selection-id %i --region ap-northeast-1


@REM ログのプット
aws logs create-log-stream --log-group-name "/sample/logTest" --log-stream-name "test"
aws logs put-log-events --log-group-name "/sample/logTest" --log-stream-name "test" --log-events '[{\"timestamp\": 1740386880000, \"message\":\"ERROR\"}]' 
aws logs put-log-events --log-group-name "/sample/logTest" --log-stream-name "test" --log-events '[{\"timestamp\": 1740386880001, \"message\":\"ERROR\"}]'
aws logs put-log-events --log-group-name "/sample/logTest" --log-stream-name "test" --log-events '[{\"timestamp\": 1740386880002, \"message\":\"ERROR\"}]'
aws cloudwatch put-metric-data --namespace "SampleLogTest" --metric-name "sample-logTest-metrics" --value 5


@REM バケット作成
aws s3api create-bucket --bucket 999999-8888-9999 --region ap-northeast-1 --create-bucket-configuration LocationConstraint=ap-northeast-1

@REM タグ付与
aws s3api put-bucket-tagging --bucket 999999-8888-9999 --tagging 'TagSet=[{Key=project,Value=xxx}]'

@REM デフォルト暗号化
aws s3api put-bucket-encryption --bucket 999999-8888-9999 --server-side-encryption-configuration '{\"Rules\":[{\"ApplyServerSideEncryptionByDefault\":{\"SSEAlgorithm\":\"aws:kms\",\"KMSMasterKeyID\":\"arn:aws:kms:ap-northeast-1:111597699083:key/6c8e4dd8-0820-469a-ab93-2ae27ab08b92\"}}]}'

@REM サーバーアクセスログ
aws s3api put-bucket-logging --bucket 999999-8888-9999 --bucket-logging-status '{\"LoggingEnabled\":{\"TargetBucket\":\"999999-s3-access-log\",\"TargetPrefix\":\"999999-8888-9999-logs/\"}}'

@REM フォルダ作成
aws s3api put-object --bucket 999999-8888-9999 --key 8888/rireki/
aws s3api put-object --bucket 999999-8888-9999 --key 9999/rireki/

@REM バケットポリシー
aws s3api put-bucket-policy --bucket 999999-8888-9999 --policy '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Deny\",\"Principal\":\"*\",\"Action\":\"s3:*\",\"Resource\":[\"arn:aws:s3:::999999-8888-9999\",\"arn:aws:s3:::999999-8888-9999/*\"],\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}}}]}'

@REM テスト
http://192.168.11.30:8080/realms/master/protocol/saml/clients/aws


cd K:
cd K:\dev\AWS\tf\tf-alb
$SAMLAssertion = Get-Content -Raw ".\saml.txt"
aws sts assume-role-with-saml --role-arn "arn:aws:iam::111597699083:role/keycloak-admin" --principal-arn "arn:aws:iam::111597699083:saml-provider/keycloak" --saml-assertion $SAMLAssertion


vi ./saml
SAMLAssertion=$(cat ./saml)
aws sts assume-role-with-saml --role-arn "arn:aws:iam::111597699083:role/keycloak-admin" --principal-arn "arn:aws:iam::111597699083:saml-provider/keycloak" --saml-assertion "$(cat ./saml)"

aws sts assume-role-with-saml --role-arn "arn:aws:iam::111597699083:role/keycloak-admin" --principal-arn "arn:aws:iam::111597699083:saml-provider/keycloak" --saml-assertion "$(./keycloak.sh)" --endpoint-url "https://vpce-06e815335aa87e22f-ambr7wvc.sts.ap-northeast-1.vpce.amazonaws.com"


vi ./keycloak.sh
cat > keycloak.sh

#!/bin/bash
URL_KEYCLOAK="http://192.168.11.30:8080/realms/master/protocol/saml/clients/aws"
USERNAME="keycloak-admin"
PASSWORD="password"
COOKIE_JAR=$(mktemp)
LOGIN_PAGE=$(curl -c "$COOKIE_JAR" -s "$URL_KEYCLOAK")
FORM_ACTION=$(echo "$LOGIN_PAGE" | grep -oP 'action="\K[^"]+')
SAML_RESPONSE_PAGE=$(curl -b "$COOKIE_JAR" -c "$COOKIE_JAR" -s -X POST "$FORM_ACTION" -d "username=$USERNAME" -d "password=$PASSWORD")
SAML_RESPONSE=$(echo "$SAML_RESPONSE_PAGE" | grep -oP '<input type="hidden" name="SAMLResponse" value="\K[^"]+')
echo "$SAML_RESPONSE"
rm -f "$COOKIE_JAR"

aws sts assume-role-with-saml --role-arn "arn:aws:iam::111597699083:role/keycloak-admin" --principal-arn "arn:aws:iam::111597699083:saml-provider/keycloak" --saml-assertion "$(./keycloak.sh)" --endpoint-url "https://vpce-0dc6ab92dfc778c35-eb6zxngh.sts.ap-northeast-1.vpce.amazonaws.com"

export AWS_ACCESS_KEY_ID=""
export AWS_SECRET_ACCESS_KEY=""
export AWS_SESSION_TOKEN=""

aws s3 ls s3://999999-8888-9999 --endpoint-url "https://s3.ap-northeast-1.amazonaws.com"
